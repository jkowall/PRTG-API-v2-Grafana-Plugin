{"version":3,"file":"module.js","mappings":"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","sources":["webpack://prtg-api-v2-datasource/external amd \"@grafana/ui\"","webpack://prtg-api-v2-datasource/./node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://prtg-api-v2-datasource/external amd \"@grafana/runtime\"","webpack://prtg-api-v2-datasource/external amd \"@grafana/data\"","webpack://prtg-api-v2-datasource/./node_modules/react/jsx-runtime.js","webpack://prtg-api-v2-datasource/external amd \"react\"","webpack://prtg-api-v2-datasource/webpack/bootstrap","webpack://prtg-api-v2-datasource/webpack/runtime/define property getters","webpack://prtg-api-v2-datasource/webpack/runtime/hasOwnProperty shorthand","webpack://prtg-api-v2-datasource/webpack/runtime/make namespace object","webpack://prtg-api-v2-datasource/./src/api.ts","webpack://prtg-api-v2-datasource/./src/datasource.ts","webpack://prtg-api-v2-datasource/./src/components/ConfigEditor.tsx","webpack://prtg-api-v2-datasource/./src/components/QueryEditor.tsx","webpack://prtg-api-v2-datasource/./src/module.ts"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__531__;","module.exports = __WEBPACK_EXTERNAL_MODULE__781__;","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__959__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { getBackendSrv } from '@grafana/runtime';\nimport { PRTGObject } from './types';\n\nexport interface PRTGApiClientOptions {\n  url: string;\n  port: number;\n  apiKey: string;\n  allowInsecure: boolean;\n}\n\nexport interface PRTGQueryOptions {\n  endpoint: string;\n  filter?: string;\n  limit?: number;\n  offset?: number;\n}\n\nexport interface PRTGApiResponse<T = any> {\n  data: T[];\n  total?: number;\n  offset?: number;\n  limit?: number;\n}\n\nexport class PRTGApiClient {\n  private baseUrl: string;\n  private apiKey: string;\n  // private allowInsecure: boolean; // TODO: Implement SSL verification settings\n\n  constructor(options: PRTGApiClientOptions) {\n    this.baseUrl = `${options.url}:${options.port}/api/v2`;\n    this.apiKey = options.apiKey;\n    // this.allowInsecure = options.allowInsecure; // TODO: Implement SSL verification\n  }\n\n  async query(options: PRTGQueryOptions): Promise<PRTGApiResponse<PRTGObject>> {\n    const { endpoint, filter, limit, offset } = options;\n    \n    const params: Record<string, string> = {};\n    \n    if (filter) {\n      params.filter = filter;\n    }\n    if (limit !== undefined) {\n      params.limit = limit.toString();\n    }\n    if (offset !== undefined) {\n      params.offset = offset.toString();\n    }\n\n    const url = this.buildUrl(endpoint, params);\n    \n    try {\n      const response = await getBackendSrv().fetch<PRTGObject[]>({\n        url,\n        method: 'GET',\n        headers: this.getHeaders(),\n      }).toPromise();\n\n      return {\n        data: response?.data || [],\n        total: response?.data?.length || 0,\n        offset: offset || 0,\n        limit: limit || 0,\n      };\n    } catch (error) {\n      console.error('PRTG API request failed:', error);\n      throw new Error(`Failed to fetch data from PRTG API: ${error}`);\n    }\n  }\n\n  async testConnection(): Promise<void> {\n    // Test the connection by making a simple API call\n    try {\n      const url = this.buildUrl('experimental/objects', { limit: '1' });\n      await getBackendSrv().fetch({\n        url,\n        method: 'GET',\n        headers: this.getHeaders(),\n      }).toPromise();\n    } catch (error) {\n      throw new Error(`Connection test failed: ${error}`);\n    }\n  }\n\n  async getObjects(filter?: string, limit?: number, offset?: number): Promise<PRTGApiResponse<PRTGObject>> {\n    return this.query({\n      endpoint: 'experimental/objects',\n      filter,\n      limit,\n      offset,\n    });\n  }\n\n  async getObjectsDown(limit?: number): Promise<PRTGApiResponse<PRTGObject>> {\n    return this.getObjects('status = down', limit);\n  }\n\n  async getObjectsWarning(limit?: number): Promise<PRTGApiResponse<PRTGObject>> {\n    return this.getObjects('status = warning', limit);\n  }\n\n  async getObjectsPaused(limit?: number): Promise<PRTGApiResponse<PRTGObject>> {\n    return this.getObjects('status = paused', limit);\n  }\n\n  private buildUrl(endpoint: string, params: Record<string, string> = {}): string {\n    const url = new URL(`${this.baseUrl}/${endpoint}`);\n    \n    Object.entries(params).forEach(([key, value]) => {\n      if (value !== undefined && value !== '') {\n        url.searchParams.append(key, value);\n      }\n    });\n\n    return url.toString();\n  }\n\n  private getHeaders(): Record<string, string> {\n    return {\n      'Authorization': `Bearer ${this.apiKey}`,\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n    };\n  }\n}\n","import {\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceApi,\n  DataSourceInstanceSettings,\n  MutableDataFrame,\n  FieldType,\n} from '@grafana/data';\n\nimport { PRTGDataSourceOptions, PRTGQuery, PRTGSecureJsonData, PRTGObject } from './types';\nimport { PRTGApiClient } from './api';\n\nexport class PRTGDataSource extends DataSourceApi<PRTGQuery, PRTGDataSourceOptions> {\n  private apiClient: PRTGApiClient;\n\n  constructor(instanceSettings: DataSourceInstanceSettings<PRTGDataSourceOptions>) {\n    super(instanceSettings);\n\n    const { url, port = 1616, allowInsecure = false } = instanceSettings.jsonData;\n    const { apiKey = '' } = (instanceSettings as any).decryptedSecureJsonData as PRTGSecureJsonData;\n\n    this.apiClient = new PRTGApiClient({\n      url: url || '',\n      port,\n      apiKey,\n      allowInsecure,\n    });\n  }\n\n  async query(options: DataQueryRequest<PRTGQuery>): Promise<DataQueryResponse> {\n    // const { range } = options; // TODO: Use range for time-based queries\n    const data: MutableDataFrame[] = [];\n\n    for (const target of options.targets) {\n      if (target.hide || !target.endpoint) {\n        continue;\n      }\n\n      try {\n        const response = await this.apiClient.query({\n          endpoint: target.endpoint,\n          filter: target.filter,\n          limit: target.limit,\n          offset: target.offset,\n        });\n\n        const frame = new MutableDataFrame({\n          refId: target.refId,\n          fields: this.createFields(response.data, target.columns),\n        });\n\n        // Add data to the frame\n        for (const item of response.data) {\n          frame.add(this.transformObjectToRow(item, target.columns));\n        }\n\n        data.push(frame);\n      } catch (error) {\n        console.error('PRTG API Error:', error);\n        // Create an empty frame with error info\n        const errorFrame = new MutableDataFrame({\n          refId: target.refId,\n          fields: [\n            { name: 'Error', type: FieldType.string },\n          ],\n        });\n        errorFrame.add({ Error: `Failed to fetch data: ${error}` });\n        data.push(errorFrame);\n      }\n    }\n\n    return { data };\n  }\n\n  async testDatasource() {\n    try {\n      await this.apiClient.testConnection();\n      return {\n        status: 'success',\n        message: 'Successfully connected to PRTG API v2',\n      };\n    } catch (error) {\n      return {\n        status: 'error',\n        message: `Failed to connect: ${error}`,\n      };\n    }\n  }\n\n  private createFields(data: PRTGObject[], columns?: string[]) {\n    if (!data.length) {\n      return [];\n    }\n\n    const sampleObject = data[0];\n    const fieldsToShow = columns || Object.keys(sampleObject);\n\n    return fieldsToShow.map(fieldName => ({\n      name: this.formatFieldName(fieldName),\n      type: this.getFieldType(sampleObject[fieldName as keyof PRTGObject]),\n    }));\n  }\n\n  private formatFieldName(fieldName: string): string {\n    return fieldName\n      .replace(/_/g, ' ')\n      .replace(/\\b\\w/g, l => l.toUpperCase());\n  }\n\n  private getFieldType(value: any): FieldType {\n    if (typeof value === 'number') {\n      return FieldType.number;\n    }\n    if (typeof value === 'boolean') {\n      return FieldType.boolean;\n    }\n    if (value instanceof Date || (typeof value === 'string' && !isNaN(Date.parse(value)))) {\n      return FieldType.time;\n    }\n    return FieldType.string;\n  }\n\n  private transformObjectToRow(obj: PRTGObject, columns?: string[]) {\n    const fieldsToShow = columns || Object.keys(obj);\n    const row: any = {};\n\n    for (const field of fieldsToShow) {\n      const value = obj[field as keyof PRTGObject];\n      \n      // Handle nested objects like parent.name\n      if (field.includes('.')) {\n        const [parentKey, childKey] = field.split('.');\n        const parentObj = obj[parentKey as keyof PRTGObject] as any;\n        row[this.formatFieldName(field)] = parentObj?.[childKey] || null;\n      } else {\n        row[this.formatFieldName(field)] = value;\n      }\n    }\n\n    return row;\n  }\n}\n","import React, { ChangeEvent, PureComponent } from 'react';\nimport { LegacyForms } from '@grafana/ui';\nimport { DataSourcePluginOptionsEditorProps } from '@grafana/data';\nimport { PRTGDataSourceOptions, PRTGSecureJsonData } from '../types';\n\nconst { SecretFormField, FormField } = LegacyForms;\n\ninterface Props extends DataSourcePluginOptionsEditorProps<PRTGDataSourceOptions> {}\n\ninterface State {}\n\nexport class ConfigEditor extends PureComponent<Props, State> {\n  onURLChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { onOptionsChange, options } = this.props;\n    const jsonData = {\n      ...options.jsonData,\n      url: event.target.value,\n    };\n    onOptionsChange({ ...options, jsonData });\n  };\n\n  onPortChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { onOptionsChange, options } = this.props;\n    const jsonData = {\n      ...options.jsonData,\n      port: parseInt(event.target.value, 10) || 1616,\n    };\n    onOptionsChange({ ...options, jsonData });\n  };\n\n  onAllowInsecureChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { onOptionsChange, options } = this.props;\n    const jsonData = {\n      ...options.jsonData,\n      allowInsecure: event.target.checked,\n    };\n    onOptionsChange({ ...options, jsonData });\n  };\n\n  // Secure field (password) change handler\n  onAPIKeyChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { onOptionsChange, options } = this.props;\n    onOptionsChange({\n      ...options,\n      secureJsonData: {\n        apiKey: event.target.value,\n      },\n    });\n  };\n\n  onResetAPIKey = () => {\n    const { onOptionsChange, options } = this.props;\n    onOptionsChange({\n      ...options,\n      secureJsonFields: {\n        ...options.secureJsonFields,\n        apiKey: false,\n      },\n      secureJsonData: {\n        ...options.secureJsonData,\n        apiKey: '',\n      },\n    });\n  };\n\n  render() {\n    const { options } = this.props;\n    const { jsonData, secureJsonFields } = options;\n    const secureJsonData = (options.secureJsonData || {}) as PRTGSecureJsonData;\n\n    return (\n      <div className=\"gf-form-group\">\n        <div className=\"gf-form\">\n          <FormField\n            label=\"PRTG Server URL\"\n            labelWidth={10}\n            inputWidth={20}\n            onChange={this.onURLChange}\n            value={jsonData.url || ''}\n            placeholder=\"https://monitoring.prtg.server\"\n            tooltip=\"The base URL of your PRTG server (without port)\"\n          />\n        </div>\n\n        <div className=\"gf-form\">\n          <FormField\n            label=\"Port\"\n            labelWidth={10}\n            inputWidth={20}\n            onChange={this.onPortChange}\n            value={jsonData.port || 1616}\n            placeholder=\"1616\"\n            tooltip=\"The port number for PRTG API v2 (default: 1616)\"\n            type=\"number\"\n          />\n        </div>\n\n        <div className=\"gf-form\">\n          <div className=\"gf-form-label width-10\">Options</div>\n          <div className=\"gf-form-switch\">\n            <label className=\"gf-form-label\">\n              <input\n                type=\"checkbox\"\n                checked={jsonData.allowInsecure || false}\n                onChange={this.onAllowInsecureChange}\n              />\n              Allow insecure SSL\n            </label>\n          </div>\n        </div>\n\n        <div className=\"gf-form-inline\">\n          <div className=\"gf-form\">\n            <SecretFormField\n              isConfigured={(secureJsonFields && secureJsonFields.apiKey) as boolean}\n              value={secureJsonData.apiKey || ''}\n              label=\"API Key\"\n              placeholder=\"Your PRTG API Key\"\n              labelWidth={10}\n              inputWidth={20}\n              onReset={this.onResetAPIKey}\n              onChange={this.onAPIKeyChange}\n              tooltip=\"The API key for authenticating with PRTG (read-only recommended)\"\n            />\n          </div>\n        </div>\n\n        <div className=\"gf-form-group\">\n          <div className=\"gf-form\">\n            <div className=\"gf-form-label width-10\">Help</div>\n            <div className=\"gf-form-label\">\n              <p>\n                Make sure PRTG API v2 is enabled on your server. \n                You can find the API documentation at: https://your-prtg-server:1616/api/v2/oas/\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { ChangeEvent, PureComponent } from 'react';\nimport { LegacyForms, InlineField, Select } from '@grafana/ui';\nimport { QueryEditorProps, SelectableValue } from '@grafana/data';\nimport { PRTGDataSource } from '../datasource';\nimport { PRTGDataSourceOptions, PRTGQuery } from '../types';\n\nconst { FormField } = LegacyForms;\n\ntype Props = QueryEditorProps<PRTGDataSource, PRTGQuery, PRTGDataSourceOptions>;\n\nconst ENDPOINT_OPTIONS: Array<SelectableValue<string>> = [\n  { label: 'Objects (Experimental)', value: 'experimental/objects' },\n  { label: 'Sensors', value: 'sensors' },\n  { label: 'Devices', value: 'devices' },\n  { label: 'Groups', value: 'groups' },\n  { label: 'Probes', value: 'probes' },\n];\n\nconst PREDEFINED_FILTERS: Array<SelectableValue<string>> = [\n  { label: 'All Objects', value: '' },\n  { label: 'Down Status', value: 'status = down' },\n  { label: 'Warning Status', value: 'status = warning' },\n  { label: 'Paused Status', value: 'status = paused' },\n  { label: 'Up Status', value: 'status = up' },\n  { label: 'Custom Filter', value: 'custom' },\n];\n\nconst COMMON_COLUMNS = [\n  'name',\n  'status',\n  'message',\n  'parent.name',\n  'lastup',\n  'lastdown',\n  'kind_name',\n  'objid',\n  'device',\n  'group',\n  'probe',\n];\n\nexport class QueryEditor extends PureComponent<Props> {\n  onEndpointChange = (value: SelectableValue<string>) => {\n    const { onChange, query } = this.props;\n    onChange({ ...query, endpoint: value.value });\n  };\n\n  onFilterChange = (value: SelectableValue<string>) => {\n    const { onChange, query } = this.props;\n    if (value.value === 'custom') {\n      onChange({ ...query, filter: '' });\n    } else {\n      onChange({ ...query, filter: value.value });\n    }\n  };\n\n  onCustomFilterChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { onChange, query } = this.props;\n    onChange({ ...query, filter: event.target.value });\n  };\n\n  onLimitChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { onChange, query } = this.props;\n    const limit = parseInt(event.target.value, 10);\n    onChange({ ...query, limit: isNaN(limit) ? undefined : limit });\n  };\n\n  onOffsetChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { onChange, query } = this.props;\n    const offset = parseInt(event.target.value, 10);\n    onChange({ ...query, offset: isNaN(offset) ? undefined : offset });\n  };\n\n  onColumnsChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { onChange, query } = this.props;\n    const columnsString = event.target.value;\n    const columns = columnsString\n      .split(',')\n      .map(col => col.trim())\n      .filter(col => col.length > 0);\n    onChange({ ...query, columns: columns.length > 0 ? columns : undefined });\n  };\n\n  render() {\n    const query = { ...this.props.query };\n    const { endpoint, filter, limit, offset, columns } = query;\n\n    const selectedEndpoint = ENDPOINT_OPTIONS.find(option => option.value === endpoint) || ENDPOINT_OPTIONS[0];\n    \n    const isCustomFilter = filter && !PREDEFINED_FILTERS.find(option => option.value === filter);\n    const selectedFilter = isCustomFilter \n      ? PREDEFINED_FILTERS.find(option => option.value === 'custom')\n      : PREDEFINED_FILTERS.find(option => option.value === filter) || PREDEFINED_FILTERS[0];\n\n    return (\n      <div className=\"gf-form-group\">\n        <div className=\"gf-form\">\n          <InlineField label=\"Endpoint\" labelWidth={12}>\n            <Select\n              options={ENDPOINT_OPTIONS}\n              value={selectedEndpoint}\n              onChange={this.onEndpointChange}\n              width={30}\n            />\n          </InlineField>\n        </div>\n\n        <div className=\"gf-form\">\n          <InlineField label=\"Filter\" labelWidth={12}>\n            <Select\n              options={PREDEFINED_FILTERS}\n              value={selectedFilter}\n              onChange={this.onFilterChange}\n              width={30}\n            />\n          </InlineField>\n        </div>\n\n        {(isCustomFilter || selectedFilter?.value === 'custom') && (\n          <div className=\"gf-form\">\n            <FormField\n              label=\"Custom Filter\"\n              labelWidth={12}\n              inputWidth={30}\n              onChange={this.onCustomFilterChange}\n              value={filter || ''}\n              placeholder=\"e.g., status = down AND name contains 'server'\"\n              tooltip=\"Use PRTG API v2 filter syntax\"\n            />\n          </div>\n        )}\n\n        <div className=\"gf-form\">\n          <FormField\n            label=\"Limit\"\n            labelWidth={12}\n            inputWidth={15}\n            onChange={this.onLimitChange}\n            value={limit?.toString() || ''}\n            placeholder=\"0 (no limit)\"\n            tooltip=\"Maximum number of results to return\"\n            type=\"number\"\n          />\n        </div>\n\n        <div className=\"gf-form\">\n          <FormField\n            label=\"Offset\"\n            labelWidth={12}\n            inputWidth={15}\n            onChange={this.onOffsetChange}\n            value={offset?.toString() || ''}\n            placeholder=\"0\"\n            tooltip=\"Number of results to skip\"\n            type=\"number\"\n          />\n        </div>\n\n        <div className=\"gf-form\">\n          <FormField\n            label=\"Columns\"\n            labelWidth={12}\n            inputWidth={30}\n            onChange={this.onColumnsChange}\n            value={columns?.join(', ') || ''}\n            placeholder=\"name, status, message, parent.name\"\n            tooltip={`Comma-separated list of columns to display. Common columns: ${COMMON_COLUMNS.join(', ')}`}\n          />\n        </div>\n\n        <div className=\"gf-form-group\">\n          <div className=\"gf-form\">\n            <div className=\"gf-form-label width-12\">Help</div>\n            <div className=\"gf-form-label\">\n              <small>\n                Use the PRTG API v2 syntax for filters. \n                Examples: &quot;status = down&quot;, &quot;name contains &apos;server&apos;&quot;, &quot;status = warning AND device = &apos;router&apos;&quot;\n              </small>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { DataSourcePlugin } from '@grafana/data';\nimport { PRTGDataSource } from './datasource';\nimport { ConfigEditor } from './components/ConfigEditor';\nimport { QueryEditor } from './components/QueryEditor';\nimport { PRTGQuery, PRTGDataSourceOptions } from './types';\n\nexport const plugin = new DataSourcePlugin<PRTGDataSource, PRTGQuery, PRTGDataSourceOptions>(PRTGDataSource)\n  .setConfigEditor(ConfigEditor)\n  .setQueryEditor(QueryEditor);\n"],"names":["module","exports","__WEBPACK_EXTERNAL_MODULE__7__","f","k","Symbol","for","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","jsx","jsxs","__WEBPACK_EXTERNAL_MODULE__531__","__WEBPACK_EXTERNAL_MODULE__781__","__WEBPACK_EXTERNAL_MODULE__959__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","definition","o","defineProperty","enumerable","get","obj","prop","r","toStringTag","value","PRTGApiClient","query","options","endpoint","filter","limit","offset","params","toString","url","this","buildUrl","response","getBackendSrv","fetch","method","headers","getHeaders","toPromise","data","total","length","error","console","Error","testConnection","getObjects","getObjectsDown","getObjectsWarning","getObjectsPaused","URL","baseUrl","entries","forEach","searchParams","append","apiKey","constructor","port","PRTGDataSource","DataSourceApi","target","targets","hide","apiClient","frame","MutableDataFrame","refId","fields","createFields","columns","item","add","transformObjectToRow","push","errorFrame","name","FieldType","string","testDatasource","status","message","sampleObject","keys","map","fieldName","formatFieldName","getFieldType","replace","l","toUpperCase","number","boolean","Date","isNaN","parse","time","fieldsToShow","row","field","includes","parentKey","childKey","split","parentObj","instanceSettings","super","allowInsecure","jsonData","decryptedSecureJsonData","SecretFormField","FormField","LegacyForms","ConfigEditor","PureComponent","render","secureJsonFields","secureJsonData","div","className","label","labelWidth","inputWidth","onChange","onURLChange","placeholder","tooltip","onPortChange","input","checked","onAllowInsecureChange","isConfigured","onReset","onResetAPIKey","onAPIKeyChange","event","onOptionsChange","parseInt","ENDPOINT_OPTIONS","PREDEFINED_FILTERS","COMMON_COLUMNS","QueryEditor","selectedEndpoint","find","option","isCustomFilter","selectedFilter","InlineField","Select","onEndpointChange","width","onFilterChange","onCustomFilterChange","onLimitChange","onOffsetChange","onColumnsChange","join","small","col","trim","plugin","DataSourcePlugin","setConfigEditor","setQueryEditor"],"sourceRoot":""}